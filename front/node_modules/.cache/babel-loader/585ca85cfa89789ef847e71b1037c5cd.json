{"remainingRequest":"E:\\Project\\traceability\\front\\node_modules\\thread-loader\\dist\\cjs.js!E:\\Project\\traceability\\front\\node_modules\\babel-loader\\lib\\index.js!E:\\Project\\traceability\\front\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Project\\traceability\\front\\src\\store\\index.js","dependencies":[{"path":"E:\\Project\\traceability\\front\\src\\store\\index.js","mtime":1546836437535},{"path":"E:\\Project\\traceability\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Project\\traceability\\front\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Project\\traceability\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Project\\traceability\\front\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  //声明全局变量，通过this.$store.state访问\n  state: {\n    userInfo: null,\n    eventId: null\n  },\n  //在getters中声明state中变量的计算函数，缓存计算后的数据，通过this.$store.getters调用\n  getters: {\n    isLogin: function isLogin(state) {\n      if (state.userInfo == null) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  },\n  //执行同步方法，改变state状态，通过this.$store.commit调用\n  mutations: {\n    setUserInfo: function setUserInfo(state, userInfo) {\n      state.userInfo = userInfo;\n    },\n    setEventId: function setEventId(state, eventId) {\n      state.eventId = eventId;\n    }\n  },\n  //以异步方式执行mutations，通过this.$store.dispatch调用\n  actions: {}\n});",{"version":3,"sources":["E:\\Project\\traceability\\front\\src\\store\\index.js"],"names":["Vue","Vuex","use","Store","state","userInfo","eventId","getters","isLogin","mutations","setUserInfo","setEventId","actions"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACE,KAAT,CAAe;AAC1B;AACAC,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAC,IADN;AAEHC,IAAAA,OAAO,EAAC;AAFL,GAFmB;AAM1B;AACAC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OADK,mBACGJ,KADH,EACS;AACV,UAAGA,KAAK,CAACC,QAAN,IAAgB,IAAnB,EAAwB;AACpB,eAAO,KAAP;AACH,OAFD,MAEK;AACD,eAAO,IAAP;AACH;AACJ;AAPI,GAPiB;AAgB1B;AACAI,EAAAA,SAAS,EAAE;AACPC,IAAAA,WADO,uBACKN,KADL,EACWC,QADX,EACoB;AACvBD,MAAAA,KAAK,CAACC,QAAN,GAAeA,QAAf;AACH,KAHM;AAIPM,IAAAA,UAJO,sBAIIP,KAJJ,EAIUE,OAJV,EAIkB;AACrBF,MAAAA,KAAK,CAACE,OAAN,GAAcA,OAAd;AACH;AANM,GAjBe;AAyB1B;AACAM,EAAAA,OAAO,EAAE;AA1BiB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n    //声明全局变量，通过this.$store.state访问\n    state: {\n        userInfo:null,\n        eventId:null\n    },\n    //在getters中声明state中变量的计算函数，缓存计算后的数据，通过this.$store.getters调用\n    getters: {\n        isLogin(state){\n            if(state.userInfo==null){\n                return false;\n            }else{\n                return true;\n            }\n        }\n    },\n    //执行同步方法，改变state状态，通过this.$store.commit调用\n    mutations: {\n        setUserInfo(state,userInfo){\n            state.userInfo=userInfo\n        },\n        setEventId(state,eventId){\n            state.eventId=eventId\n        }\n    },\n    //以异步方式执行mutations，通过this.$store.dispatch调用\n    actions: {\n\n    }\n})"]}]}