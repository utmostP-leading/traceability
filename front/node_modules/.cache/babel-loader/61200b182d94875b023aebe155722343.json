{"remainingRequest":"E:\\Project\\traceability\\front\\node_modules\\babel-loader\\lib\\index.js!E:\\Project\\traceability\\front\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Project\\traceability\\front\\src\\store\\index.js","dependencies":[{"path":"E:\\Project\\traceability\\front\\src\\store\\index.js","mtime":1546779636914},{"path":"E:\\Project\\traceability\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Project\\traceability\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Project\\traceability\\front\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  //声明全局变量，通过this.$store.state访问\n  state: {\n    userInfo: null\n  },\n  //在getters中声明state中变量的计算函数，缓存计算后的数据，通过this.$store.getters调用\n  getters: {},\n  //执行同步方法，改变state状态，通过this.$store.commit调用\n  mutations: {\n    setUserInfo: function setUserInfo(state, userInfo) {\n      state.userInfo = userInfo;\n    }\n  },\n  //以异步方式执行mutations，通过this.$store.dispatch调用\n  actions: {}\n});",{"version":3,"sources":["E:\\Project\\traceability\\front\\src\\store\\index.js"],"names":["Vue","Vuex","use","Store","state","userInfo","getters","mutations","setUserInfo","actions"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACE,KAAT,CAAe;AAC1B;AACAC,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAC;AADN,GAFmB;AAK1B;AACAC,EAAAA,OAAO,EAAE,EANiB;AAS1B;AACAC,EAAAA,SAAS,EAAE;AACPC,IAAAA,WADO,uBACKJ,KADL,EACWC,QADX,EACoB;AACvBD,MAAAA,KAAK,CAACC,QAAN,GAAeA,QAAf;AACH;AAHM,GAVe;AAe1B;AACAI,EAAAA,OAAO,EAAE;AAhBiB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n    //声明全局变量，通过this.$store.state访问\r\n    state: {\r\n        userInfo:null\r\n    },\r\n    //在getters中声明state中变量的计算函数，缓存计算后的数据，通过this.$store.getters调用\r\n    getters: {\r\n\r\n    },\r\n    //执行同步方法，改变state状态，通过this.$store.commit调用\r\n    mutations: {\r\n        setUserInfo(state,userInfo){\r\n            state.userInfo=userInfo\r\n        }\r\n    },\r\n    //以异步方式执行mutations，通过this.$store.dispatch调用\r\n    actions: {\r\n\r\n    }\r\n})"]}]}